@{
    ViewData["Title"] = "Covid-19";
}
@model Covid19.ApplicationModels.PredictionOutputModel

<partial name="_Header" for="@Model.Settings"/>

<div class="text-center">
    <div style="width: 90%;">
        <canvas id="canvas_total_cases"></canvas>
    </div>
    <div style="width: 90%;">
        <canvas id="canvas_new_cases"></canvas>
    </div>
    <div style="width: 90%;">
        <canvas id="canvas_week_new_cases"></canvas>
    </div>
    <script>
        var totalCases = {
            type: 'line',
            data: {
                labels: [@foreach (var day in Model.TimeSeries.DaysData)
                         {
                             <text>'</text>@(day.Date.ToShortDateString())<text>',</text>
                         } ],
                datasets: [
                    {
                        label: 'Prediction total cases',
                        borderColor: 'rgba(255, 0, 0, 0.2)',
                        backgroundColor: 'rgba(255, 0, 0, 0.2)',
                        data: [@foreach (var day in Model.TimeSeries.DaysData)
                               {
                                   @(day.PredictionTotalCases + ", ")
                               } ],
                        fill: true,
                    },
                    {
                        label: 'Total cases',
                        borderColor: 'rgba(0, 0, 0, 1)',
                        data: [@foreach (var day in Model.TimeSeries.DaysData)
                               {
                                   if (day.TotalCases != null)
                                   {
                                       @(day.TotalCases.Value + ", ")
                                   }
                               } ],
                        fill: false,
                    }
                ]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'COVID-19 total cases'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [
                        {
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Day'
                            }
                        }
                    ],
                    yAxes: [
                        {
                            display: true,
                            //type: 'logarithmic',
                            scaleLabel: {
                                display: true,
                                labelString: 'Total cases'
                            },
                            ticks:
                            {
                                min: 0
                            },
                        }
                    ]
                }
            }
        };

        var newCases = {
            type: 'bar',
            data: {
                labels: [@foreach (var day in Model.TimeSeries.DaysData)
                         {
                             <text>'</text>@(day.Date.ToShortDateString())<text>',</text>
                         } ],
                datasets: [
                    {
                        label: 'Prediction new cases',
                        borderColor: 'rgba(255, 0, 0, 0.2)',
                        backgroundColor: 'rgba(255, 0, 0, 0.2)',
                        data: [@foreach (var day in Model.TimeSeries.DaysData)
                               {
                                   @(day.PredictionNewCases + ", ")
                               } ],
                        fill: true,
                    },
                    {
                        label: 'New cases',
                        borderColor: 'rgba(0, 0, 0, 0.75)',
                        backgroundColor: 'rgba(0, 0, 0, 0.75)',
                        data: [@foreach (var day in Model.TimeSeries.DaysData)
                               {
                                   if (day.NewCases != null)
                                   {
                                       @(day.NewCases.Value + ", ")
                                   }
                               } ],
                        fill: false,
                    }
                ]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'COVID-19 new cases'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [
                        {
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Day'
                            }
                        }
                    ],
                    yAxes: [
                        {
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'New cases'
                            },
                            ticks:
                            {
                                min: 0
                            },
                        }
                    ]
                }
            }
        };

        var weekNewCases = {
            type: 'bar',
            data: {
                labels: [@foreach (var day in Model.TimeSeries.DaysData.Where(day => day.WeeklyNewCases > 0))
                         {
                             <text>'</text>@(day.Date.ToShortDateString())<text>',</text>
                         } ],
                datasets: [
                    {
                        label: 'Weekly new cases',
                        borderColor: 'rgba(0, 0, 0, 0.75)',
                        backgroundColor: 'rgba(0, 0, 0, 0.75)',
                        data: [@foreach (var day in Model.TimeSeries.DaysData.Where(day => day.WeeklyNewCases > 0))
                               {
                                   if (day.NewCases != null)
                                   {
                                       @(day.WeeklyNewCases.Value + ", ")
                                   }
                               } ],
                        fill: false,
                    }
                ]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'COVID-19 new cases'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [
                        {
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Day'
                            }
                        }
                    ],
                    yAxes: [
                        {
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Weekly New cases'
                            },
                            ticks:
                            {
                                min: 0
                            },
                        }
                    ]
                }
            }
        };

        window.onload = function() {
            var ctx = document.getElementById('canvas_total_cases').getContext('2d');
            window.myLine = new Chart(ctx, totalCases);

            var ctx2 = document.getElementById('canvas_new_cases').getContext('2d');
            window.myLine2 = new Chart(ctx2, newCases);

            var ctx3 = document.getElementById('canvas_week_new_cases').getContext('2d');
            window.myLine3 = new Chart(ctx3, weekNewCases);
        };
    </script>
</div>